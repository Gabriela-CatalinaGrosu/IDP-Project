services:

  kong:
    image: kong:3.9.0
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    # volumes:
    #   - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml
    configs:
      - source: kong-config
        target: /usr/local/kong/declarative/kong.yml
    networks:
      - kong
    deploy:
      mode: replicated
      replicas: 1

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - portainer-data:/data
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    networks:
      - kong

  webapp:
    image: webapp
    networks:
      - backend
      - kong
    deploy:
      mode: replicated
      replicas: 1

 
  backend-app-db:
    image: postgres:13.2-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB: webapp_db
      POSTGRES_PASSWORD: password
    volumes:
      - app-db-vol:/var/lib/postgresql/data
    networks:
      - backend
      - database-admin
    deploy:
      mode: replicated
      replicas: 1

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 8002:80
    depends_on:
      - backend-app-db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.admin
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-vol:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/.pgpass:/pgpass
    networks:
      - database-admin
      - kong
    deploy:
      mode: replicated
      replicas: 1
    
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log
      - /etc/machine-id:/etc/machine-id
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /run/docker.sock:/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    deploy:
      mode: global

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
      - kong
    deploy:
      mode: replicated
      replicas: 1

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:8000/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
      - kong
    deploy:
      mode: replicated
      replicas: 1


volumes:
  app-db-vol:
  pgadmin-vol:
  portainer-data:
  grafana-data:


configs:
  kong-config:
    file: ./kong/kong.yml

networks:
  backend:
  database-admin:
  kong:
  monitoring:
  